version: '1.0'
mode: parallel
stages:
- Test
- Build Artifacts
steps:

  main_clone:
    stage: Test
    title: Clone repository
    type: git-clone
    repo: https://github.com/codefresh-io/venona
    revision: ${{CF_BRANCH}}
    credentials:
      username: github
      password: ${{secrets.hybrid.git}}

  test: &common
    title: Run Unit Tests
    stage: Test
    image: codefresh/venona-tester
    commands:
      - cd venona && make test
    when:
      steps:
      - name: main_clone
        on:
        - success  
  
  compare-version:
    <<: *common
    title: Compare version to venonactl
    image: codefresh/semver
    commands:
    - export VENONACTL_VERSION=$(cat ./venonactl/VERSION)
    - export VENONA_VERSION=$(cat ./venona/VERSION)
    - semver-cli equal $VENONACTL_VERSION $
    - cf_export VERSION=${{VENONA_VERSION}}
    when:
      steps:
      - name: main_clone
        on:
        - success  

  gofmt:
    <<: *common
    title: Run go-fmt
    commands:
      - cd venona && make test-fmt
  
  license:
    <<: *common
    title: Check License
    commands:
      - cd venona && make license    

  spellcheck:
    <<: *common
    title: Spell Check
    commands:
      - cd venona && make spellcheck

  lint:
    <<: *common
    title: Run Go Lint
    commands:
      - cd venona && make lint
  
  security:
    <<: *common
    title: Run Security Check
    commands:
      - cd venona && make security-check

  gocyclo:
    <<: *common
    title: Run Gocyclo
    commands:
      - cd venona && make gocyclo
  
  upload-codecov:
    <<: *common
    title: Upload Code Coverage
    stage: Build Artifacts
    commands:
      - cd venona && make upload-coverage
    environment:
    - VCS_COMMIT_ID=${{CF_COMMIT}}
    - VCS_BRANCH_NAME=${{CF_BRANCH}}
    - VCS_SLUG=codefresh-io/venona
    - CI_BUILD_URL=${{CF_BUILD_URL}}
    - CI_BUILD_ID=${{CF_BUILD_ID}}
    when:
      steps:
      - name: test
        on:
        - success 

  build:
    type: build
    title: Build Docker Image
    stage: Build Artifacts
    tag: ${{CF_BRANCH_TAG_NORMALIZED}}
    dockerfile: Dockerfile
    working_directory: ${{main_clone}}/venona
    image_name: codefresh/venona
    when:
      steps:
      - name: main_clone
        on:
        - success
  
  push:
    type: push
    title: Push candidate
    stage: Build Artifacts
    candidate: ${{build}}
    tag:
    - ${{VERSION}}-${{CF_BRANCH_TAG_NORMALIZED}}
    - ${{CF_BRANCH_TAG_NORMALIZED}}
    image_name: codefresh/venona
    when:
      steps:
      - name: main_clone
        on:
        - success

